@{
	int delayStep = 1000;
	int delay = 4000 - delayStep;

	var errorToasts =
		TempData[key: Infrastructure.BasePageModel.ErrorToastsKeyName] as
		System.Collections.Generic.IList<string>;

	var warningToasts =
		TempData[key: Infrastructure.BasePageModel.WarningToastsKeyName] as
		System.Collections.Generic.IList<string>;

	var successToasts =
		TempData[key: Infrastructure.BasePageModel.SuccessToastsKeyName] as
		System.Collections.Generic.IList<string>;

	if ((errorToasts == null || errorToasts.Count == 0) &&
	(warningToasts == null || warningToasts.Count == 0) &&
	(successToasts == null || successToasts.Count == 0))
	{
		return;
	}
}

<div aria-live="polite" aria-atomic="true" class="position-relative">
	<div class="toast-container position-absolute top-0 end-0 p-3 opacity-50" style="z-index: 10000;">

		@{
			if (errorToasts != null)
			{
				foreach (var message in errorToasts)
				{
					delay += delayStep;

					<div class="toast bg-danger text-white align-items-center border-0" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="@(delay)" data-bs-animation="true" data-bs-autohide="true">
						<div class="d-flex">
							<div class="toast-body">
								@(message)
							</div>
							<button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
						</div>
					</div>
				}
			}

			if (warningToasts != null)
			{
				foreach (var message in warningToasts)
				{
					delay += delayStep;

					<div class="toast bg-warning text-black align-items-center border-0" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="@(delay)" data-bs-animation="true" data-bs-autohide="true">
						<div class="d-flex">
							<div class="toast-body">
								@(message)
							</div>
							<button type="button" class="btn-close btn-close-black me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
						</div>
					</div>
				}
			}

			if (successToasts != null)
			{
				foreach (var message in successToasts)
				{
					delay += delayStep;

					<div class="toast bg-success text-white align-items-center border-0" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="@(delay)" data-bs-animation="true" data-bs-autohide="true">
						<div class="d-flex">
							<div class="toast-body">
								@(message)
							</div>
							<button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
						</div>
					</div>
				}
			}
		}

	</div>
</div>

<script>

	window.addEventListener('load', (e) => {

		var toastElements =
			document.querySelectorAll('.toast')

		toastElements.forEach((toastElement, index) => {

			let toast =
				new bootstrap.Toast(toastElement)

			toast.show()

		})

	})

</script>
